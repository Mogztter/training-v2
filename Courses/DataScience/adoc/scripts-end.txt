[subs="attributes"]
++++


<script src="https://cdn.auth0.com/js/lock/11.23.0/lock.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/js-cookie@2/src/js.cookie.min.js"></script>
<script src="https://js.maxmind.com/js/apis/geoip2/v2.1/geoip2.js" type="text/javascript"></script>

<script>
var auth0Options = {
	configurationBaseUrl: 'https://cdn.auth0.com',
	allowedConnections: ['google-oauth2', 'linkedin', 'twitter', 'Username-Password-Authentication'],
	additionalSignUpFields: [
		{
			name: 'first_name',
			placeholder: 'First Name'
		},
		{
			name: 'last_name',
			placeholder: 'Last Name'
		}
	],
	closable: false,
	languageDictionary: {
		signUpTerms: "I agree to the <a href='https://neo4j.com/terms/online-trial-agreement/' style='text-decoration: underline' target='_blank'>terms of service</a> of Neo4j."
	},
	mustAcceptTerms: true,
	auth: {
		redirect: true,
		redirectUrl: 'https://neo4j.com/accounts/login',
		responseType: 'token id_token',
		audience: 'neo4j://accountinfo/',
		params: {
			scope: 'read:account-info write:account-info openid email profile user_metadata'
		}
	}
}

const classStates = {
	loggedIn: 'graph-academy-for-logged-in',
	notLoggedIn: 'graph-academy-for-not-logged-in'
}

class GraphAcademyLogin {
	constructor(options = {}) {
		console.log('constructor called');
		if (!Auth0Lock || typeof Auth0Lock !== 'function') return;
		console.log(options);
		this.lock = new Auth0Lock('DxhmiF8TCeznI7Xoi08UyYScLGZnk4ke', 'login.neo4j.com', auth0Options);
		this.options = options;
		this.checkSession(options.callback);
	}

	checkSession(cb) {
		this.lock.checkSession({}, async (err, result) => {
			console.log(result);
			if (result) {
				this.isLoggedIn = true;
				this.authResult = result;
				if (this.callback && typeof this.callback === 'function') this.callback()
			} else {
				this.isLoggedIn = false;
			}
			if (err && this.options.loginRedirectUrl) {
				this.redirectToLogin();
			}
			this.handleHtmlOnState(result ? 'loggedIn' : 'notLoggedIn');
			if (cb && typeof cb === 'function') cb(err, result);
		})
	}

	handleHtmlOnState(state = null) {
		const loggedInElements = document.getElementsByClassName(classStates['loggedIn']) || [];
		const notLoggedInElements = document.getElementsByClassName(classStates['notLoggedIn']) || [];
		if (state === 'loggedIn') {
			for (let item of loggedInElements) {
				item.style.display = 'inherit';
			}
			for (let item of notLoggedInElements) {
				item.style.display = 'none';
			}
		} else if (state === 'notLoggedIn') {
			for (let item of loggedInElements) {
				item.style.display = 'none';
			}
			for (let item of notLoggedInElements) {
				item.style.display = 'inherit';
			}
		}
	}

	logout() {
		const logoutOptions = {};
		if (this.options.redirectOnLogout) logoutOptions.redirectTo = this.options.redirectOnLogout;
		this.lock.logout(logoutOptions);
		this.handleHtmlOnState('notLoggedIn');
	}

	redirectToLogin() {
		return window.location.href = this.options.loginRedirectUrl;
	}
}
 </script>

<script>
  const login = new GraphAcademyLogin();
</script>

 <link rel='stylesheet' id='neo-codemirror-css'
    href="https://neo4j.com/wp-content/themes/neo4jweb/assets/css/codemirror-neo.css?ver=4.5" type='text/css'
    media='screen'/>

 <script type='text/javascript'>
  $('.admonitionblock.note').find('.icon').html('NOTE');
  $('.admonitionblock.warning').find('.icon').html('WARNING');
  $('.admonitionblock.information').find('.icon').html('INFO');

  var isBlock = /^(p|li|div|h\\d|pre|blockquote|td)$/;

  function textContent(node, out) {
    if (node.nodeType == 3) return out.push(node.nodeValue);
    for (var ch = node.firstChild; ch; ch = ch.nextSibling) {
      textContent(ch, out);
      if (isBlock.test(node.nodeType)) out.push("\n");
    }
  }

  CodeMirror.colorize = function(collection, defaultMode) {
    if (!collection) collection = document.body.getElementsByTagName("pre");

    for (var i = 0; i < collection.length; ++i) {
      var syntax = false;
      var node = collection[i];
      var mode = node.getAttribute("data-lang") || defaultMode;
      if (mode == "cypher-syntax") {
        syntax = true;
        mode = "cypher";
      }
      if (!mode) continue;

      var text = [];
      textContent(node, text);
      node.innerHTML = "";
      CodeMirror.runMode(text.join(""), mode, node);

      node.className += " cm-s-default";
      if (syntax) {
        node.className += " cypher-syntax";
      }
    }
  };

  $( document ).ready(function() {
    if (CodeMirror.colorize) {
      CodeMirror.colorize(document.body.getElementsByTagName("pre"), 'cypher');
    }
  });
 </script>


<script>
  window.intercomSettings = {
    app_id: "dt0ig5ab",
    hide_default_launcher: true
  };
</script>
<script>(function(){var w=window;var ic=w.Intercom;if(typeof ic==="function"){ic('reattach_activator');ic('update',intercomSettings);}else{var d=document;var i=function(){i.c(arguments)};i.q=[];i.c=function(args){i.q.push(args)};w.Intercom=i;function l(){var s=d.createElement('script');s.type='text/javascript';s.async=true;s.src='https://widget.intercom.io/widget/dt0ig5ab';var x=d.getElementsByTagName('script')[0];x.parentNode.insertBefore(s,x);}if(w.attachEvent){w.attachEvent('onload',l);}else{w.addEventListener('load',l,false);}}})()</script>

<!-- JWT decoder: ONLY USE TO SEE UN-VERIFIED VALUES -->
<script src="http://s3.amazonaws.com/dev.assets.neo4j.com/wp-content/js/jwt-decode.min.js"></script>


<script>
const SITE_URL = window.location;


$( document ).ready(function() {
       const login = new GraphAcademyLogin({loginRedirectUrl: "https://neo4j.com/graphacademy/online-training/data-science/"});

        login.checkSession((err, result) => {
            if (result) {
               getQuizStatus();

              /*
                var userInfoIntercom = Cookies.getJSON("com.neo4j.accounts.userInfo");
                if (userInfoIntercom) {
                  try {
                    window.Intercom("update", {
                      app_id: "dt0ig5ab",
                      name: userInfoIntercom.name,
                      email: userInfoIntercom.email,
                      user_id: userInfoIntercom.sub,
                      hide_default_launcher: true
                    });;
                  } catch (err) {
                    console.error(err);
                  }
                }
                Intercom('trackEvent','training-datascience-view');
                */
            }
        })

});
</script>

++++
